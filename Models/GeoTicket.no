<?php

declare(strict_types=1);

namespace Modules\Ticket\Models;

use Modules\Ticket\Enums\TicketStatusEnum;

/**
 * @property int                                                                                                        $id
 * @property string                                                                                                     $name
 * @property string                                                                                                     $content
 * @property int                                                                                                        $owner_id
 * @property int|null                                                                                                   $responsible_id
 * @property int                                                                                                        $status_id
 * @property string|null                                                                                                $code
 * @property string|null                                                                                                $ticket_prefix
 * @property int                                                                                                        $order
 * @property int                                                                                                        $priority_id
 * @property int|null                                                                                                   $project_id
 * @property float|null                                                                                                 $estimation
 * @property int|null                                                                                                   $epic_id
 * @property int|null                                                                                                   $sprint_id
 * @property \Illuminate\Support\Carbon|null                                                                            $deleted_at
 * @property \Illuminate\Support\Carbon|null                                                                            $created_at
 * @property \Illuminate\Support\Carbon|null                                                                            $updated_at
 * @property int|null                                                                                                   $type_id
 * @property string|null                                                                                                $latitude
 * @property string|null                                                                                                $longitude
 * @property string|null                                                                                                $updated_by
 * @property string|null                                                                                                $created_by
 * @property string|null                                                                                                $deleted_by
 * @property TicketStatusEnum                                                                                        $status
 * @property TicketPriority|null                                                                                        $priority
 * @property TicketType|null                                                                                            $type
 * @property \Illuminate\Database\Eloquent\Collection<int, \Modules\Ticket\Models\TicketActivity>                       $activities
 * @property int|null                                                                                                   $activities_count
 * @property \Illuminate\Database\Eloquent\Collection<int, \Modules\Ticket\Models\TicketComment>                        $comments
 * @property int|null                                                                                                   $comments_count
 * @property mixed                                                                                                      $completude_percentage
 * @property Epic|null                                                                                                  $epic
 * @property mixed                                                                                                      $estimation_for_humans
 * @property int|null                                                                                                   $estimation_in_seconds
 * @property float                                                                                                      $estimation_progress
 * @property \Illuminate\Database\Eloquent\Collection<int, \Modules\Ticket\Models\TicketHour>                           $hours
 * @property int|null                                                                                                   $hours_count
 * @property \Spatie\MediaLibrary\MediaCollections\Models\Collections\MediaCollection<int, \Modules\Media\Models\Media> $media
 * @property int|null                                                                                                   $media_count
 * @property \Modules\User\Models\User|null                                                                             $owner
 * @property Project|null                                                                                               $project
 * @property \Illuminate\Database\Eloquent\Collection<int, \Modules\Ticket\Models\TicketRelation>                       $relations
 * @property int|null                                                                                                   $relations_count
 * @property \Modules\User\Models\User|null                                                                             $responsible
 * @property Sprint|null                                                                                                $sprint
 * @property Sprint|null                                                                                                $sprints
 * @property \Illuminate\Database\Eloquent\Collection<int, \Spatie\ModelStatus\Status>                                  $statuses
 * @property int|null                                                                                                   $statuses_count
 * @property \Illuminate\Database\Eloquent\Collection<int, \Modules\User\Models\User>                                   $subscribers
 * @property int|null                                                                                                   $subscribers_count
 * @property mixed                                                                                                      $total_logged_hours
 * @property mixed                                                                                                      $total_logged_in_hours
 * @property mixed                                                                                                      $total_logged_seconds
 *
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     currentStatus(...$names)
 * @method static \Modules\Ticket\Database\Factories\TicketFactory factory($count = null, $state = [])
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     onlyTrashed()
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     otherCurrentStatus(...$names)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     query()
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereCode($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereContent($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereCreatedBy($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereDeletedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereDeletedBy($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereEpicId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereEstimation($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereLatitude($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereLongitude($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereOrder($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereOwnerId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     wherePriorityId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereProjectId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereResponsibleId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereSprintId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereStatusId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereTicketPrefix($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereTypeId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereUpdatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     whereUpdatedBy($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     withTrashed()
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket     withoutTrashed()
 *
 * @property string|null                          $slug
 * @property \Modules\Fixcity\Models\Profile|null $creator
 * @property \Modules\Fixcity\Models\Profile|null $updater
 *
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket wherePriority($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket whereSlug($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket whereStatus($value)
 * @method static \Illuminate\Database\Eloquent\Builder|Ticket whereType($value)
 *
 * @property \Illuminate\Database\Eloquent\Collection<int, \Spatie\Comments\Models\CommentNotificationSubscription> $notificationSubscriptions
 * @property int|null                                                                                               $notification_subscriptions_count
 *
 * @mixin \Eloquent
 */
class Ticket extends Ticket
{
    protected $table = 'tickets';
}
